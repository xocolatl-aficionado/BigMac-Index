{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../CurrencyValuation.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { afterUpdate, onMount } from 'svelte';\n\n  export let countries;\n  export let selectedCountry1;\n  export let selectedCountry2;\n  let exchangeRate;\n  let valuation;\n  const bigMacPrices = { \"CAD\": 6.77, \"CNY\": 24, \"INR\": 191, \"USD\": 5.15, \"EUR\": 4.65, \"CHF\": 6.5 }; // hardcoded\n  let showBigMacContainer = false;\n\n  async function fetchExchangeRate(foreignCountry) {\n    const response = await fetch(`https://api.exchangerate-api.com/v4/latest/${selectedCountry1.code}`);\n    const data = await response.json();\n    return data.rates[foreignCountry];\n  }\n\n  function calculateValuation() {\n    const price1 = bigMacPrices[selectedCountry1.code];\n    const price2 = bigMacPrices[selectedCountry2.code];\n\n    const impliedExchangeRate = price2 / price1;\n    const foreignPrice = price2 / exchangeRate;\n\n    if (impliedExchangeRate > exchangeRate) {\n      return `${selectedCountry2.code} is overvalued relative to ${selectedCountry1.code}`;\n    } else if (impliedExchangeRate < exchangeRate) {\n      return `${selectedCountry2.code} is undervalued relative to ${selectedCountry1.code}`;\n    } else {\n      return `${selectedCountry2.code} is fairly valued relative to ${selectedCountry1.code}`;\n    }\n  }\n\n  async function handleCountryChange() {\n    exchangeRate = await fetchExchangeRate(selectedCountry2.code);\n    valuation = calculateValuation();\n    showBigMacContainer = true;\n  }\n\n  onMount(async () => {\n    await handleCountryChange();\n    valuation = calculateValuation();\n  });\n  \n    function formatNumber(value) {\n    return Number(value).toFixed(2);\n  }\n\n</script>\n\n<main>\n  <h1>Big Mac Index Currency Valuation</h1>\n  <select bind:value={selectedCountry1} on:change={handleCountryChange}>\n    {#each countries as country}\n      <option value={country}>{country.name}</option>\n    {/each}\n  </select>\n  <select bind:value={selectedCountry2} on:change={handleCountryChange}>\n    {#each countries as country}\n      <option value={country}>{country.name}</option>\n    {/each}\n  </select>\n\n  {#if valuation}\n    {#key selectedCountry1, selectedCountry2}\n    <div class=\"result-container\">\n      <p class=\"valuation\">{valuation}</p>\n      <p class=\"exchange-rate\">Exchange Rate: {formatNumber(exchangeRate)}</p>\n      <p class=\"implied-exchange-rate\">Implied Exchange Rate: {formatNumber(bigMacPrices[selectedCountry2.code] / bigMacPrices[selectedCountry1.code])}</p>\n    </div>\n    <div class=\"big-mac-container {showBigMacContainer ? 'show' : ''}\">\n      <div class=\"big-mac-info\">\n        <p>\n          A Big Mac bought in {selectedCountry1.name} for {formatNumber(bigMacPrices[selectedCountry1.code])} {selectedCountry1.code}\n          would be valued at {formatNumber(bigMacPrices[selectedCountry2.code] / exchangeRate)} {selectedCountry1.code} in {selectedCountry2.name}\n        </p>\n      </div>\n      <div class=\"image-container\">\n        <div>\n          <img class=\"big-mac-image\" src=\"https://s7d1.scene7.com/is/image/mcdonalds/DC_201907_0005_BigMac_832x472:product-header-desktop?wid=830&hei=458&dpr=off\" alt=\"Big Mac\">\n          <p class=\"label\">{formatNumber(bigMacPrices[selectedCountry1.code])} {selectedCountry1.code}</p>\n        </div>\n        <div>\n          <img class=\"big-mac-image\" src=\"https://s7d1.scene7.com/is/image/mcdonalds/DC_201907_0005_BigMac_832x472:product-header-desktop?wid=830&hei=458&dpr=off\" alt=\"Big Mac\">\n          <p class=\"label\">{formatNumber(bigMacPrices[selectedCountry2.code] / exchangeRate)} {selectedCountry1.code}</p>\n        </div>\n      </div>\n    </div>\n    {/key}\n  {/if}\n</main>\n\n<style>\n  @import url('https://fonts.googleapis.com/css2?family=Permanent+Marker&display=swap');\n\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 400px;\n    margin: 0 auto;\n  }\n\n  .big-mac-container {\n    opacity: 0;\n    transition: opacity 1s;\n  }\n\n  .big-mac-container.show {\n    opacity: 1;\n  }\n  .image-container {\n    display: flex;\n    flex-direction: row;\n    margin-top: 20px;\n    justify-content: center;\n  }\n  .image-container > div {\n    text-align: center; /* Add this line to center align the image and label within each div */\n    margin-right: 20px; /* Add this line to create some spacing between the image and the label */\n  }\n\n  .big-mac-image {\n    width: 500px;\n\n  }\n\n  .label {\n    text-align: center;\n    margin-top: 10px;\n    font-family: 'Permanent Marker', cursive;\n    font-size: 25pt\n  }\n\n\n</style>\n"
  ],
  "names": [],
  "mappings": "AA6FE,QAAQ,6EAA6E,CAErF,kCAAK,CACH,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IACZ,CAEA,gDAAmB,CACjB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,EACtB,CAEA,kBAAkB,mCAAM,CACtB,OAAO,CAAE,CACX,CACA,8CAAiB,CACf,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,UAAU,CAAE,IAAI,CAChB,eAAe,CAAE,MACnB,CACA,+BAAgB,CAAG,kBAAI,CACrB,UAAU,CAAE,MAAM,CAClB,YAAY,CAAE,IAChB,CAEA,4CAAe,CACb,KAAK,CAAE,KAET,CAEA,oCAAO,CACL,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,IAAI,CAChB,WAAW,CAAE,kBAAkB,CAAC,CAAC,OAAO,CACxC,SAAS,CAAE,IAAI;AACnB,EAAE"
}