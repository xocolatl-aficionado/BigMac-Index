{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../CurrencyValuation.svelte"
  ],
  "sourcesContent": [
    "<script>\n  export let countries;\n  export let selectedCountry1;\n  export let selectedCountry2;\n  let impliedExchangeRate;\n  let exchangeRate;\n  let bigMacPrices;\n  let foreignPrice;\n  let price1;\n  let price2;\n\n  async function fetchExchangeRate() {\n    const response = await fetch(\n      `https://api.exchangerate-api.com/v4/latest/${selectedCountry1.code}`\n    );\n    const data = await response.json();\n    exchangeRate = data.rates[selectedCountry2.code];\n    \n    // const bigMacResponse = await fetch('https://api.example.com/bigmacindex');\n    // const bigMacData = await bigMacResponse.json();\n    bigMacPrices = {\"CAD\": 6.77, \"CNY\": 24, \"INR\": 191, \"USD\": 5.15, \"EUR\": 4.65 } //hardcoded\n  }\n\nfunction calculateValuation() {\n  if (!exchangeRate) return \"\";\n  console.log(\"selectedCountry2.code: \" + selectedCountry2.code);\n\n  price1 = bigMacPrices[selectedCountry1.code];\n  price2 = bigMacPrices[selectedCountry2.code];\n\n  if (price1 && price2) {\n    impliedExchangeRate = price2 / price1;\n    console.log(\"implied: \" + impliedExchangeRate);\n    console.log(\"real: \" + exchangeRate)\n    foreignPrice =  price2/exchangeRate;\n\n    if (impliedExchangeRate > exchangeRate) {\n      return `${selectedCountry2.code} is overvalued relative to ${selectedCountry1.code}`;\n    } else if (impliedExchangeRate < exchangeRate) {\n      return `${selectedCountry2.code} is undervalued relative to ${selectedCountry1.code}`;\n    } else {\n      return `${selectedCountry2.code} is fairly valued relative to ${selectedCountry1.code}`;\n    }\n  } else {\n    return \"\";\n  }\n}\n\n $: {\n    if (selectedCountry1 || selectedCountry2) {\n      fetchExchangeRate().then(rate => {\n        exchangeRate = rate;\n        calculateValuation();\n      });\n    }\n }\n  \n</script>\n\n<main>\n  <h1>Big Mac Index Currency Valuation</h1>\n  <select bind:value={selectedCountry1}>\n    {#each countries as country}\n      <option value={country}>{country.name}</option>\n    {/each}\n  </select>\n  <select bind:value={selectedCountry2}>\n    {#each countries as country}\n      <option value={country}>{country.name}</option>\n    {/each}\n  </select>\n\n  <p>\n    {#if exchangeRate}\n      Valuation: {calculateValuation()}\n      \n      Exchange rate: {exchangeRate}\n      Implied Exchange rate: {impliedExchangeRate}\n    {/if}\n    {#if bigMacPrices}\n      A Big Mac bought in {selectedCountry1.name} for {price1} {selectedCountry1.code} would be valued at {foreignPrice} {selectedCountry1.code} in {selectedCountry2.name}!\n    {/if}\n\n  </p>\n</main>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 400px;\n    margin: 0 auto;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAuFE,kBAAK,CACH,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IACZ"
}